大家都知道，写程序大体步骤为：

1.用编辑器编写源代码，如.c文件。

2.用编译器编译代码生成目标文件，如.o。

3.用链接器连接目标代码生成可执行文件，如.exe。

但如果源文件太多，一个一个编译时就会特别麻烦，于是人们想到，为什么不设计一种类似批处理的程序，来批处理编译源文件呢，于是就有了make工具，它是一个自动化编译工具，你可以使用一条命令实现完全编译。但是你需要编写一个规则文件，make依据它来批处理编译，这个文件就是makefile，所以编写makefile文件也是一个程序员所必备的技能。

对于一个大工程，编写makefile实在是件复杂的事，于是人们又想，为什么不设计一个工具，读入所有源文件之后，自动生成makefile呢，于是就出现了cmake工具，它能够输出各种各样的makefile或者project文件,从而帮助程序员减轻负担。但是随之而来也就是编写cmakelist文件，它是cmake所依据的规则。所以在编程的世界里没有捷径可走，还是要脚踏实地的。
 （写cmakelist，然后cmake（依赖cmakelist）自动得出makefile，然后make（依赖makefile）自动编译源码得到可执行二进制文件，然后make install（实质是make，依赖makefile，install是可选项）在系统中设置环境变量或将一些库文件放到系统的一些资源路径下，方便其他程序调用共享）

通俗易懂的说：
  一般clone一个master之后，先cd到master文件夹下，然后mkdir build & cd build, 然后cmake .. （一般这个时候可以加编译选项，选择编译哪些要手动选择的功能，要根据项目的wiki说明），然后make（或者cmake --build）就生成了可执行文件。手动编译得到的文件都会放在build文件加下，如果想要添加一些新的选项进行重新编译，可以直接讲build文件夹删除，然后回到mkdir build这一步重头再来一遍就行了。
